{"version":3,"sources":["components/ContactForm.js","components/Navbar.js","components/Alerts.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","props","useState","text","setText","className","mode","contacth1","value","onChange","event","target","style","backgroundColor","color","id","rows","placeholder","type","onClick","upText","toUpperCase","showalert","length","loText","toLowerCase","newtext","split","join","navigator","clipboard","writeText","filter","element","trim","replace","Navbar","to","title","homeactive","aboutactive","toggle","htmlFor","defaultProps","Alerts","height","alert","class","role","msg","About","src","alt","App","setMode","setalert","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f7907ef.chunk.js","sourcesContent":["import React , {useState} from 'react'\r\n\r\nexport default function ContactForm(props) {\r\n    const [text , setText]=useState(\"\");\r\n    const HandleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const HandleUpClick = ()=>{\r\n        let upText=text.toUpperCase();\r\n        setText(upText);\r\n        props.showalert(\"Successfully converted to UpperCase.\",\"success\");\r\n        \r\n    }\r\n    const HandleLoClick = ()=>{\r\n        let loText=text.toLowerCase();\r\n        setText(loText);\r\n        props.showalert(\"Successfully converted to LowerCase.\",\"success\");\r\n    }\r\n    const HandleclearClick = ()=>{\r\n        let loText=(\"\");\r\n        setText(loText);\r\n        props.showalert(\"Successfully cleared.\",\"success\");\r\n    }\r\n    const HandleCopy = ()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showalert(\"Successfully copied.\",\"success\");\r\n    }\r\n    const Handlespaces = ()=>{\r\n        let newtext = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n        props.showalert(\"Successfully removed extra spaces.\",\"success\");\r\n     }\r\n    \r\n    return (\r\n        <>\r\n        <div>\r\n        <div className=\"mb-3 px-5\">\r\n        <h1 className={`m-3 text-${props.mode==='dark'?'light':'dark'}`}>{props.contacth1}</h1>\r\n        <textarea value={text} onChange={HandleOnChange} className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'#02355a':'White' ,color:props.mode==='dark'?'white':'black'}} id=\"exampleFormControlTextarea11\" rows=\"10\" placeholder=\"Enter Your Text Here.\"></textarea>\r\n        <button type=\"submit\" onClick={HandleUpClick} className={`btn btn-success m-3 ${text.length>0?\" \":\" disabled\"}`}>Convert To UpperCase</button>\r\n        <button type=\"submit\" onClick={HandleLoClick} className={`btn btn-success m-3 ${text.length>0?\" \":\" disabled\"}`}>Convert To LowerCase</button>\r\n        <button type=\"submit\" onClick={Handlespaces} className={`btn btn-success m-3 ${text.length>0?\" \":\" disabled\"}`}>Remove Extra Spaces</button>\r\n        <button type=\"submit\" onClick={HandleCopy} className={`btn btn-info m-3 ${text.length>0?\" \":\" disabled\"}`}>Copy </button>\r\n        <button type=\"submit\" onClick={HandleclearClick} className={`btn btn-danger m-3 ${text.length>0?\" \":\" disabled\"}`}>Clear</button>\r\n        </div>\r\n        </div>\r\n        <div className=\"container\">\r\n\r\n        </div>\r\n        <div className={`container text-${props.mode==='dark'?'light':'dark'}`}>\r\n            <h5>You Text Info</h5>\r\n            <p>Your Text Words are {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} and Charachters are {text.length}</p>\r\n            \r\n         \r\n            {text.length>0?<h6>You Can Read the text in : <strong>{0.008 * text.trim().replace(/  +/g, \" \").split(\" \").length} Minutes</strong></h6>:<h6>0 Minute read</h6>}\r\n            <br/>\r\n          \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n       <>\r\n  \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            <nav className={`navbar navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container\">\r\n                   \r\n                </div>\r\n            </nav>\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n                <h4>{props.title}</h4>\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item \"/>\r\n                        <Link className={`nav-link ${props.homeactive}`} aria-current=\"page\" to=\"/\">\r\n                         <h5>Home</h5>\r\n                        </Link>\r\n                    <li className=\"nav-item \">\r\n                        <Link className={`nav-link ${props.aboutactive}`} to=\"/about\"><b>About Us</b></Link>\r\n                    </li>\r\n                  \r\n                </ul>\r\n                {/* <form className=\"d-flex \">\r\n                    <input className=\"form-control me-2\" type=\"search\" name=\"query\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className=\"btn btn-danger\" type=\"submit\">Search</button>\r\n                </form>\r\n                <button className=\"btn btn-danger mx-2\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#loginModal\">Login</button>\r\n            </div>\r\n        </div>\r\n        \r\n  <div className=\"modal fade\" id=\"loginModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div className=\"modal-dialog\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\" id=\"loginModalLabel\">Modal title</h5>\r\n          <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n            <form>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                  <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n                  <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                  <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n                </div>\r\n                <div className=\"mb-3 form-check\">\r\n                  <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>\r\n                  <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Confirm</label>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n                <button type=\"button\" className=\"btn btn-danger\" data-bs-dismiss=\"modal\">Close</button>\r\n    </form> */}\r\n    <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" onClick={props.toggle} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n        </div>\r\n        \r\n      </div>\r\n   \r\n    </nav>\r\n\r\n       </>\r\n    )\r\n  }\r\n  Navbar.propTypes={\r\n    title: PropTypes.string\r\n  }\r\nNavbar.defaultProps={\r\n  title:\"Website Name Here\"\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alerts(props) {\r\n    return (\r\n        <div style={{height: '60px'}}>\r\n             {props.alert &&  <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>Success : </strong> {props.alert.msg}\r\n            </div>}\r\n         </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alerts\r\n","import React from 'react'\r\n\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div className={`container bg-${props.mode==='dark'?'dark':'light'}`}>\r\n           <div className=\"card mb-3\">\r\n  <img src=\"https://images.unsplash.com/photo-1457305237443-44c3d5a30b89?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=600&ixid=MnwxfDB8MXxyYW5kb218MHx8Y29kaW5nfHx8fHx8MTYyOTk5MDQxNQ&ixlib=rb-1.2.1&q=80&utm_campaign=api-credit&utm_medium=referral&utm_source=unsplash_source&w=1600\" className=\"card-img-top\" alt=\"...\"/>\r\n  <div className={`card-body bg-${props.mode==='dark'?'dark':'light'} text-${props.mode==='light'?'dark':'light'}`}>\r\n    <h5 className=\"card-title\">About Us</h5>\r\n    <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptas, numquam. Veniam optio ad iusto cum fuga quasi quisquam accusantium laboriosam beatae ullam fugiat, corporis consequatur suscipit animi, sed officia expedita, facere consequuntur asperiores vitae reprehenderit nam tempore aliquam provident? Omnis dolores suscipit asperiores aliquid fugiat consequuntur nesciunt, facilis illo porro placeat illum iste, ipsa eligendi.</p>\r\n  </div>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React, {useState} from 'react';\nimport ContactForm from './components/ContactForm';\nimport Navbar from './components/Navbar';\nimport Alerts from './components/Alerts';\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode]= useState('light');\n  const [alert, setalert] = useState(null);\n  const showalert = (msg,type)=>{\n    setalert({\n      msg:msg,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1000);\n  }\n  const toggle = () =>{\n    if (mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#002540';\n      showalert(\"Dark Mode enabled successfully.\",\"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showalert(\"Light Mode enabled successfully.\",\"success\");\n    }\n  }\n  return (\n    <>\n    <Router >\n\n    <Switch>\n          <Route exact path=\"/about\">\n            <Navbar title=\"React Course\" aboutactive=\"active\"  mode={mode} toggle={toggle}/>\n          <Alerts alert={alert} />\n            <About mode={mode}/>\n          </Route>\n          <Route exact path=\"/\">\n              <Navbar title=\"React Course\" homeactive=\"active\" mode={mode} toggle={toggle}/>\n              <Alerts alert={alert} />\n              <ContactForm contacth1=\"Enter your message\"mode={mode} showalert={showalert}/>\n           </Route>\n        </Switch>\n <div className=\"container my5\">\n </div>\n  \n    </Router>\n  </>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}